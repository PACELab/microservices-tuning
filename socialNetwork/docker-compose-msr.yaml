services:
  compose-post-redis: {command: --maxmemory 10808mb --maxmemory-policy allkeys-random
      --maxmemory-samples 4 --hz 35 --zset-max-ziplist-entries 151, hostname: compose-post-redis,
    image: redis, restart: always}
  home-timeline-redis:
    command: --maxmemory 10801mb --maxmemory-policy volatile-random --maxmemory-samples
      6 --hz 9 --zset-max-ziplist-entries 109
    hostname: home-timeline-redis
    image: redis
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/home-timeline_redis:/data']
  media-memcached: {command: -m 7612 -c 1029 -R 16 -t 19 -f 1.845453030277271, hostname: media-memcached,
    image: memcached, restart: always}
  media-mongodb: {command: --wiredTigerCacheSizeGB 15.132752843954734 --serviceExecutor
      adaptive --wiredTigerCollectionBlockCompressor none --setParameter wiredTigerConcurrentReadTransactions=169
      --setParameter wiredTigerConcurrentWriteTransactions=133, hostname: media-mongodb,
    image: mongo, restart: always}
  post-storage-memcached: {command: -m 8811 -c 1011 -R 17 -t 17 -f 1.622604000744008,
    hostname: post-storage-memcached, image: memcached, restart: always}
  post-storage-mongodb:
    command: --wiredTigerCacheSizeGB 19.306617024699058 --serviceExecutor adaptive
      --wiredTigerCollectionBlockCompressor snappy --setParameter wiredTigerConcurrentReadTransactions=142
      --setParameter wiredTigerConcurrentWriteTransactions=139
    hostname: post-storage-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/post-storage_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/post-storage_mongodb:/data/db']
  social-graph-mongodb:
    command: --wiredTigerCacheSizeGB 16.30219048789562 --serviceExecutor adaptive
      --wiredTigerCollectionBlockCompressor snappy --setParameter wiredTigerConcurrentReadTransactions=216
      --setParameter wiredTigerConcurrentWriteTransactions=177
    hostname: social-graph-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/social-graph_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/social-graph_mongodb:/data/db/']
  social-graph-redis: {command: --maxmemory 10261mb --maxmemory-policy volatile-ttl
      --maxmemory-samples 5 --hz 6 --zset-max-ziplist-entries 109, hostname: social-graph-redis,
    image: redis, restart: always}
  url-shorten-memcached: {command: -m 4091 -c 1407 -R 19 -t 20 -f 1.7565528057347946,
    hostname: url-shorten-memcached, image: memcached, restart: always}
  url-shorten-mongodb: {command: --wiredTigerCacheSizeGB 17.296463383990776 --serviceExecutor
      adaptive --wiredTigerCollectionBlockCompressor zlib --setParameter wiredTigerConcurrentReadTransactions=130
      --setParameter wiredTigerConcurrentWriteTransactions=80, hostname: url-shorten-mongodb,
    image: mongo, restart: always}
  user-memcached: {command: -m 8084 -c 811 -R 25 -t 19 -f 1.0639894092448148, hostname: user-memcached,
    image: memcached, restart: always}
  user-mongodb: {command: --wiredTigerCacheSizeGB 19.04196873937921 --serviceExecutor
      adaptive --wiredTigerCollectionBlockCompressor zlib --setParameter wiredTigerConcurrentReadTransactions=128
      --setParameter wiredTigerConcurrentWriteTransactions=73, hostname: user-mongodb,
    image: mongo, restart: always}
  user-timeline-mongodb:
    command: --wiredTigerCacheSizeGB 12.53750437941913 --serviceExecutor synchronous
      --wiredTigerCollectionBlockCompressor snappy --setParameter wiredTigerConcurrentReadTransactions=115
      --setParameter wiredTigerConcurrentWriteTransactions=149
    hostname: user-timeline-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/user-timeline_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/user-timeline_mongodb:/data/db']
  user-timeline-redis: {command: --maxmemory 12295mb --maxmemory-policy volatile-random
      --maxmemory-samples 4 --hz 52 --zset-max-ziplist-entries 90, hostname: user-timeline-redis,
    image: redis, restart: always}
  edia-frontend:
    hostname: media-frontend
    image: yg397/media-frontend:xenial
    ports: ['8081:8080']
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/media-frontend/lua-scripts:/usr/local/openresty/nginx/lua-scripts',
      '~/uservices/DeathStarBench/socialNetwork/media-frontend/conf/nginx.temp:/usr/local/openresty/nginx/conf/nginx.conf']
  nginx-thrift:
    hostname: nginx-thrift
    image: yg397/openresty-thrift:xenial
    ports: ['8080:8080']
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/nginx-web-server/lua-scripts:/usr/local/openresty/nginx/lua-scripts',
      '~/uservices/DeathStarBench/socialNetwork/nginx-web-server/pages:/usr/local/openresty/nginx/pages',
      '~/uservices/DeathStarBench/socialNetwork/nginx-web-server/conf/nginx.temp:/usr/local/openresty/nginx/conf/nginx.conf',
      '~/uservices/DeathStarBench/socialNetwork/nginx-web-server/jaeger-config.json:/usr/local/openresty/nginx/jaeger-config.json',
      '~/uservices/DeathStarBench/socialNetwork/gen-lua:/gen-lua']

  compose-post-service:
    depends_on: [write-home-timeline-rabbitmq]
    entrypoint: ComposePostService
    hostname: compose-post-service
    image: gaganso/threadmanager:service_threads
    restart: always
  home-timeline-service: {entrypoint: HomeTimelineService, hostname: home-timeline-service,
    image: 'gaganso/threadmanager:service_threads', restart: always}
  media-service: {entrypoint: MediaService, hostname: media-service, image: 'gaganso/threadmanager:service_threads',
    restart: always}
  post-storage-service:
    entrypoint: PostStorageService
    hostname: post-storage-service
    image: gaganso/threadmanager:service_threads
    ports: ['10002:9090']
    restart: always
  social-graph-service: {entrypoint: SocialGraphService, hostname: social-graph-service,
    image: 'gaganso/threadmanager:service_threads', restart: always}
  text-service: {entrypoint: TextService, hostname: text-service, image: 'gaganso/threadmanager:service_threads',
    restart: always}
  unique-id-service: {entrypoint: UniqueIdService, hostname: unique-id-service, image: 'gaganso/threadmanager:service_threads',
    restart: always}
  url-shorten-service: {entrypoint: UrlShortenService, hostname: url-shorten-service,
    image: 'gaganso/threadmanager:service_threads', restart: always}
  user-mention-service: {entrypoint: UserMentionService, hostname: user-mention-service,
    image: 'gaganso/threadmanager:service_threads', restart: always}
  user-service: {entrypoint: UserService, hostname: user-service, image: 'gaganso/threadmanager:service_threads',
    restart: always}
  user-timeline-service: {entrypoint: UserTimelineService, hostname: user-timeline-service,
    image: 'gaganso/threadmanager:service_threads', restart: always}
  write-home-timeline-rabbitmq:
    environment: {RABBITMQ_DEFAULT_VHOST: /, RABBITMQ_ERLANG_COOKIE: WRITE-HOME-TIMELINE-RABBITMQ}
    hostname: write-home-timeline-rabbitmq
    image: rabbitmq
    restart: always
  write-home-timeline-service:
    depends_on: [write-home-timeline-rabbitmq]
    entrypoint: WriteHomeTimelineService
    hostname: write-home-timeline-service
    image: gaganso/threadmanager:service_threads
    restart: always

  elastic-search:
    environment: {ES_JAVA_OPTS: -Xms512m -Xmx512m, discovery.type: single-node, http.host: 0.0.0.0,
      transport.host: 127.0.0.1, xpack.security.enabled: 'false'}
    hostname: elastic-search
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
    ports: ['9200:9200', '9300:9300']
    restart: always
  jaeger:
    command: --es.server-urls=http://elastic-search:9200 --es.num-shards=1 --es.num-replicas=0
      --log-level=error
    environment: {COLLECTOR_ZIPKIN_HTTP_PORT: '9411', SPAN_STORAGE_TYPE: elasticsearch}
    hostname: jaeger
    image: jaegertracing/all-in-one:latest
    ports: ['16686:16686']
    restart: always

version: '3'

