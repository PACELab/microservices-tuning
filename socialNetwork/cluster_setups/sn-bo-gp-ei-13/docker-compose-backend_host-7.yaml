networks:
  default:
    external: {name: social-network-overlay-1}
services:
  compose-post-redis: {command: --maxmemory 10000mb --maxmemory-policy allkeys-lfu
      --maxmemory-samples 5 --hz 1 --zset-max-ziplist-entries 64, hostname: compose-post-redis,
    image: redis, restart: always}
  home-timeline-redis:
    command: --maxmemory 10000mb --maxmemory-policy volatile-ttl --maxmemory-samples
      10 --hz 92 --zset-max-ziplist-entries 308
    hostname: home-timeline-redis
    image: redis
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/home-timeline_redis:/data']
  media-memcached: {command: -m 20000 -c 700 -R 16 -t 24 -f 3, hostname: media-memcached,
    image: memcached, restart: always}
  media-mongodb: {command: --wiredTigerCacheSizeGB 3.0802592530723123 --serviceExecutor
      synchronous --wiredTigerCollectionBlockCompressor zstd --setParameter wiredTigerConcurrentReadTransactions=39
      --setParameter wiredTigerConcurrentWriteTransactions=213, hostname: media-mongodb,
    image: mongo, restart: always}
  post-storage-memcached: {command: -m 20000 -c 512 -R 1 -t 15 -f 1.01, hostname: post-storage-memcached,
    image: memcached, restart: always}
  post-storage-mongodb:
    command: --wiredTigerCacheSizeGB 19.5 --serviceExecutor synchronous --wiredTigerCollectionBlockCompressor
      zstd --setParameter wiredTigerConcurrentReadTransactions=256 --setParameter
      wiredTigerConcurrentWriteTransactions=32
    hostname: post-storage-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/post-storage_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/post-storage_mongodb:/data/db']
  social-graph-mongodb:
    command: --wiredTigerCacheSizeGB 19.5 --serviceExecutor adaptive --wiredTigerCollectionBlockCompressor
      none --setParameter wiredTigerConcurrentReadTransactions=203 --setParameter
      wiredTigerConcurrentWriteTransactions=227
    hostname: social-graph-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/social-graph_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/social-graph_mongodb:/data/db/']
  social-graph-redis: {command: --maxmemory 10000mb --maxmemory-policy allkeys-random
      --maxmemory-samples 3 --hz 20 --zset-max-ziplist-entries 336, hostname: social-graph-redis,
    image: redis, restart: always}
  url-shorten-memcached: {command: -m 20000 -c 1128 -R 1 -t 24 -f 3, hostname: url-shorten-memcached,
    image: memcached, restart: always}
  url-shorten-mongodb: {command: --wiredTigerCacheSizeGB 19.5 --serviceExecutor synchronous
      --wiredTigerCollectionBlockCompressor none --setParameter wiredTigerConcurrentReadTransactions=35
      --setParameter wiredTigerConcurrentWriteTransactions=209, hostname: url-shorten-mongodb,
    image: mongo, restart: always}
  user-memcached: {command: -m 8192 -c 2048 -R 55 -t 24 -f 2.2554467338366404, hostname: user-memcached,
    image: memcached, restart: always}
  user-mongodb: {command: --wiredTigerCacheSizeGB 17.392896376636653 --serviceExecutor
      adaptive --wiredTigerCollectionBlockCompressor snappy --setParameter wiredTigerConcurrentReadTransactions=256
      --setParameter wiredTigerConcurrentWriteTransactions=32, hostname: user-mongodb,
    image: mongo, restart: always}
  user-timeline-mongodb:
    command: --wiredTigerCacheSizeGB 19.5 --serviceExecutor synchronous --wiredTigerCollectionBlockCompressor
      zstd --setParameter wiredTigerConcurrentReadTransactions=256 --setParameter
      wiredTigerConcurrentWriteTransactions=256
    hostname: user-timeline-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/user-timeline_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/user-timeline_mongodb:/data/db']
  user-timeline-redis: {command: --maxmemory 20000mb --maxmemory-policy volatile-ttl
      --maxmemory-samples 4 --hz 50 --zset-max-ziplist-entries 294, hostname: user-timeline-redis,
    image: redis, restart: always}
version: '3'
