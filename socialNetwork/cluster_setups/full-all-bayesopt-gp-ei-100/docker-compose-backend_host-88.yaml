networks:
  default:
    external: {name: social-network-overlay-1}
services:
  compose-post-redis: {command: --maxmemory 10000mb --maxmemory-policy allkeys-lfu
      --maxmemory-samples 10 --hz 100 --zset-max-ziplist-entries 511, hostname: compose-post-redis,
    image: redis, restart: always}
  home-timeline-redis:
    command: --maxmemory 19980mb --maxmemory-policy volatile-ttl --maxmemory-samples
      3 --hz 1 --zset-max-ziplist-entries 66
    hostname: home-timeline-redis
    image: redis
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/home-timeline_redis:/data']
  media-memcached: {command: -m 20000 -c 512 -R 2 -t 1 -f 3, hostname: media-memcached,
    image: memcached, restart: always}
  media-mongodb: {command: --wiredTigerCacheSizeGB 0.37313240027539235 --serviceExecutor
      synchronous --wiredTigerCollectionBlockCompressor none --setParameter wiredTigerConcurrentReadTransactions=256
      --setParameter wiredTigerConcurrentWriteTransactions=256, hostname: media-mongodb,
    image: mongo, restart: always}
  post-storage-memcached: {command: -m 4000 -c 2048 -R 100 -t 1 -f 3, hostname: post-storage-memcached,
    image: memcached, restart: always}
  post-storage-mongodb:
    command: --wiredTigerCacheSizeGB 19.5 --serviceExecutor synchronous --wiredTigerCollectionBlockCompressor
      zlib --setParameter wiredTigerConcurrentReadTransactions=32 --setParameter wiredTigerConcurrentWriteTransactions=256
    hostname: post-storage-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/post-storage_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/post-storage_mongodb:/data/db']
  social-graph-mongodb:
    command: --wiredTigerCacheSizeGB 0.25 --serviceExecutor adaptive --wiredTigerCollectionBlockCompressor
      none --setParameter wiredTigerConcurrentReadTransactions=34 --setParameter wiredTigerConcurrentWriteTransactions=256
    hostname: social-graph-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/social-graph_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/social-graph_mongodb:/data/db/']
  social-graph-redis: {command: --maxmemory 20000mb --maxmemory-policy allkeys-lfu
      --maxmemory-samples 3 --hz 1 --zset-max-ziplist-entries 65, hostname: social-graph-redis,
    image: redis, restart: always}
  url-shorten-memcached: {command: -m 4000 -c 512 -R 1 -t 1 -f 1.01, hostname: url-shorten-memcached,
    image: memcached, restart: always}
  url-shorten-mongodb: {command: --wiredTigerCacheSizeGB 19.5 --serviceExecutor adaptive
      --wiredTigerCollectionBlockCompressor none --setParameter wiredTigerConcurrentReadTransactions=256
      --setParameter wiredTigerConcurrentWriteTransactions=256, hostname: url-shorten-mongodb,
    image: mongo, restart: always}
  user-memcached: {command: -m 7205 -c 2048 -R 99 -t 1 -f 1.01, hostname: user-memcached,
    image: memcached, restart: always}
  user-mongodb: {command: --wiredTigerCacheSizeGB 7.616335142925112 --serviceExecutor
      adaptive --wiredTigerCollectionBlockCompressor zstd --setParameter wiredTigerConcurrentReadTransactions=182
      --setParameter wiredTigerConcurrentWriteTransactions=256, hostname: user-mongodb,
    image: mongo, restart: always}
  user-timeline-mongodb:
    command: --wiredTigerCacheSizeGB 0.3222381470695594 --serviceExecutor synchronous
      --wiredTigerCollectionBlockCompressor zstd --setParameter wiredTigerConcurrentReadTransactions=256
      --setParameter wiredTigerConcurrentWriteTransactions=32
    hostname: user-timeline-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/user-timeline_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/user-timeline_mongodb:/data/db']
  user-timeline-redis: {command: --maxmemory 10000mb --maxmemory-policy volatile-ttl
      --maxmemory-samples 3 --hz 100 --zset-max-ziplist-entries 64, hostname: user-timeline-redis,
    image: redis, restart: always}
version: '3'
