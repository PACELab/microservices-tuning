# This config was built from JSON using NGINX crossplane.
# If you encounter any bugs please report them here:
# https://github.com/nginxinc/crossplane/issues

events {
    worker_connections 620;
}
worker_processes 5;
thread_pool thread1 threads=45 max_queue=58178;
http {
    include mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request"' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"';
    sendfile on;
    tcp_nopush on;
    keepalive_timeout 120s;
    tcp_nodelay on;
    keepalive_requests 100000;
    resolver 127.0.0.11 ipv6=off;
    lua_package_path '/usr/local/openresty/nginx/lua-scripts/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;;';
    lua_shared_dict config 32k;
    init_by_lua_block {
    local upload = require "resty.upload"
    local memcached = require "resty.memcached"
    local mongo = require "resty-mongol"
  }
    server {
        listen 8080 reuseport;
        server_name localhost;
        access_log off;
        client_max_body_size 100M;
        client_body_buffer_size 100M;
        location /upload-media {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            content_by_lua '\n        local client = require "upload-media"\n        client.UploadMedia();\n      ';
        }
        location /get-media {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            content_by_lua '\n        local client = require "get-media"\n        client.GetMedia();\n      ';
        }
    }
}
