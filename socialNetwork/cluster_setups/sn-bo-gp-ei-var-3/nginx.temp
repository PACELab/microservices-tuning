# This config was built from JSON using NGINX crossplane.
# If you encounter any bugs please report them here:
# https://github.com/nginxinc/crossplane/issues

load_module modules/ngx_http_opentracing_module.so;
events {
    worker_connections 2048;
}
worker_processes 1;
thread_pool thread1 threads=24 max_queue=10000;
http {
    opentracing on;
    opentracing_load_tracer /usr/local/lib/libjaegertracing_plugin.so /usr/local/openresty/nginx/jaeger-config.json;
    include mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request"' '$status $body_bytes_sent "$http_referer" ' '"$http_user_agent" "$http_x_forwarded_for"';
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    aio threads=thread1;
    keepalive_timeout 1200s;
    keepalive_requests 1000000;
    resolver 127.0.0.11 ipv6=off;
    lua_package_path '/usr/local/openresty/nginx/lua-scripts/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;;';
    lua_shared_dict config 32k;
    init_by_lua_block {
    local bridge_tracer = require "opentracing_bridge_tracer"
    local GenericObjectPool = require "GenericObjectPool"
    local ngx = ngx
    local jwt = require "resty.jwt"
    local cjson = require 'cjson'
    local UserTimelineServiceClient = require 'social_network_UserTimelineService'
    local SocialGraphServiceClient = require 'social_network_SocialGraphService'
    local UserServiceClient = require 'social_network_UserService'
    local TextServiceClient = require 'social_network_TextService'
    local UniqueIdServiceClient = require 'social_network_UniqueIdService'
    local MediaServiceClient = require 'social_network_MediaService'

    local config = ngx.shared.config;
    config:set("secret", "secret")
    config:set("cookie_ttl", 3600 * 24)
  }
    server {
        listen 8080 reuseport;
        server_name localhost;
        access_log off;
        lua_need_request_body on;
        location = /basic_status {
            stub_status;
        }
        location /api/user/register {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            content_by_lua '\n          local client = require "api/user/register"\n          client.RegisterUser();\n      ';
        }
        location /api/user/follow {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            content_by_lua '\n          local client = require "api/user/follow"\n          client.Follow();\n      ';
        }
        location /api/user/unfollow {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            content_by_lua '\n          local client = require "api/user/unfollow"\n          client.Unfollow();\n      ';
        }
        location /api/user/login {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            content_by_lua '\n          local client = require "api/user/login"\n          client.Login();\n      ';
        }
        location /api/post/compose {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            content_by_lua '\n          local client = require "api/post/compose"\n          client.ComposePost();\n      ';
        }
        location /api/user-timeline/read {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            content_by_lua '\n          local client = require "api/user-timeline/read"\n          client.ReadUserTimeline();\n      ';
        }
        location /api/home-timeline/read {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            content_by_lua '\n          local client = require "api/home-timeline/read"\n          client.ReadHomeTimeline();\n      ';
        }
        location / {
            if ($request_method = OPTIONS) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Max-Age 1728000;
                add_header Content-Type 'text/plain; charset=utf-8';
                add_header Content-Length 0;
                return 204;
            }
            if ($request_method = POST) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            if ($request_method = GET) {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
                add_header Access-Control-Allow-Headers DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range;
                add_header Access-Control-Expose-Headers Content-Length,Content-Range;
            }
            root pages;
        }
        location /wrk2-api/home-timeline/read {
            content_by_lua '\n          local client = require "wrk2-api/home-timeline/read"\n          client.ReadHomeTimeline();\n      ';
        }
        location /wrk2-api/user-timeline/read {
            content_by_lua '\n          local client = require "wrk2-api/user-timeline/read"\n          client.ReadUserTimeline();\n      ';
        }
        location /wrk2-api/post/compose {
            content_by_lua '\n          local client = require "wrk2-api/post/compose"\n          client.ComposePost();\n      ';
        }
        location /wrk2-api/user/register {
            content_by_lua '\n          local client = require "wrk2-api/user/register"\n          client.RegisterUser();\n      ';
        }
        location /wrk2-api/user/follow {
            content_by_lua '\n          local client = require "wrk2-api/user/follow"\n          client.Follow();\n      ';
        }
        location /wrk2-api/user/unfollow {
            content_by_lua '\n          local client = require "wrk2-api/user/unfollow"\n          client.Unfollow();\n      ';
        }
    }
}
