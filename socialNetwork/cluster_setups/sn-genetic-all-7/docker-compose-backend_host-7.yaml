networks:
  default:
    external: {name: social-network-overlay-1}
services:
  compose-post-redis: {command: --maxmemory 18000mb --maxmemory-policy volatile-lru
      --maxmemory-samples 6 --hz 61 --zset-max-ziplist-entries 64, hostname: compose-post-redis,
    image: redis, restart: always}
  home-timeline-redis:
    command: --maxmemory 14000mb --maxmemory-policy allkeys-random --maxmemory-samples
      8 --hz 71 --zset-max-ziplist-entries 128
    hostname: home-timeline-redis
    image: redis
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/home-timeline_redis:/data']
  media-memcached: {command: -m 7064 -c 1536 -R 21 -t 17 -f 1.51, hostname: media-memcached,
    image: memcached, restart: always}
  media-mongodb: {command: --wiredTigerCacheSizeGB 3.25 --serviceExecutor synchronous
      --wiredTigerCollectionBlockCompressor none --setParameter wiredTigerConcurrentReadTransactions=160
      --setParameter wiredTigerConcurrentWriteTransactions=64, hostname: media-mongodb,
    image: mongo, restart: always}
  post-storage-memcached: {command: -m 14064 -c 512 -R 41 -t 11 -f 2.51, hostname: post-storage-memcached,
    image: memcached, restart: always}
  post-storage-mongodb:
    command: --wiredTigerCacheSizeGB 14.25 --serviceExecutor synchronous --wiredTigerCollectionBlockCompressor
      none --setParameter wiredTigerConcurrentReadTransactions=160 --setParameter
      wiredTigerConcurrentWriteTransactions=32
    hostname: post-storage-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/post-storage_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/post-storage_mongodb:/data/db']
  social-graph-mongodb:
    command: --wiredTigerCacheSizeGB 19.25 --serviceExecutor synchronous --wiredTigerCollectionBlockCompressor
      snappy --setParameter wiredTigerConcurrentReadTransactions=160 --setParameter
      wiredTigerConcurrentWriteTransactions=128
    hostname: social-graph-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/social-graph_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/social-graph_mongodb:/data/db/']
  social-graph-redis: {command: --maxmemory 10000mb --maxmemory-policy allkeys-random
      --maxmemory-samples 9 --hz 61 --zset-max-ziplist-entries 320, hostname: social-graph-redis,
    image: redis, restart: always}
  url-shorten-memcached: {command: -m 9064 -c 512 -R 21 -t 13 -f 1.51, hostname: url-shorten-memcached,
    image: memcached, restart: always}
  url-shorten-mongodb: {command: --wiredTigerCacheSizeGB 15.25 --serviceExecutor synchronous
      --wiredTigerCollectionBlockCompressor zstd --setParameter wiredTigerConcurrentReadTransactions=96
      --setParameter wiredTigerConcurrentWriteTransactions=192, hostname: url-shorten-mongodb,
    image: mongo, restart: always}
  user-memcached: {command: -m 9064 -c 1536 -R 21 -t 21 -f 2.26, hostname: user-memcached,
    image: memcached, restart: always}
  user-mongodb: {command: --wiredTigerCacheSizeGB 4.25 --serviceExecutor adaptive
      --wiredTigerCollectionBlockCompressor none --setParameter wiredTigerConcurrentReadTransactions=32
      --setParameter wiredTigerConcurrentWriteTransactions=192, hostname: user-mongodb,
    image: mongo, restart: always}
  user-timeline-mongodb:
    command: --wiredTigerCacheSizeGB 17.25 --serviceExecutor synchronous --wiredTigerCollectionBlockCompressor
      snappy --setParameter wiredTigerConcurrentReadTransactions=128 --setParameter
      wiredTigerConcurrentWriteTransactions=128
    hostname: user-timeline-mongodb
    image: mongo
    restart: always
    volumes: ['~/uservices/DeathStarBench/socialNetwork/tmp/user-timeline_mongoconfigdb:/data/configdb',
      '~/uservices/DeathStarBench/socialNetwork/tmp/user-timeline_mongodb:/data/db']
  user-timeline-redis: {command: --maxmemory 12000mb --maxmemory-policy allkeys-lfu
      --maxmemory-samples 4 --hz 11 --zset-max-ziplist-entries 448, hostname: user-timeline-redis,
    image: redis, restart: always}
version: '3'
